#!/usr/bin/env ruby
root_dir = File.expand_path("#{File.dirname(__FILE__)}/..")
$LOAD_PATH.unshift "#{root_dir}/lib"
require 'logtool'

COMMANDS = Dir["#{root_dir}/lib/logtool/commands/*.rb"].map { |filename|
  File.basename(filename, '.rb')
}.sort

def exit_with_usage(status = 1)
  puts <<TEXT

Usage:

  logtool summarize [logfiles...]
    Parse a given set of unicorn log files and print a summarized version of their
    contents (header and footer information for each transaction, only).

  logtool trace <ip-addr> [logfiles...]
    Parse a given set of unicorn log files and print only those messages that
    correspond to requests that come from the given IP address.

  logtool sessionize -o <output-dir> [logfiles...]
    Parse a given set of unicorn log files, split up the log messages according to
    user session, and create a directory populated with one log file per session.

  logtool resque [logfiles...]
    Parse a given set of resque log files and print the transactions in a collated format.

TEXT

  exit status
end

command = ARGV.shift || exit_with_usage

if command == 'help' || command == '-h'
  exit_with_usage 0
end

unless COMMANDS.include?(command)
  exit_with_usage
end

command_class = command.split('_').map(&:capitalize).join
command_obj = Object.const_get("Logtool::Command::#{command_class}").new

begin
  command_obj.run(ARGV)
rescue Errno::EPIPE
  # normal condition, do nothing
end

